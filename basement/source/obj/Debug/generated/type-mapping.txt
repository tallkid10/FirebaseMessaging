com/google/android/gms/actions/ItemListIntents = Android.Gms.Actions.ItemListIntents
  ACTION_ACCEPT_ITEM = ActionAcceptItem
  ACTION_APPEND_ITEM_LIST = ActionAppendItemList
  ACTION_CREATE_ITEM_LIST = ActionCreateItemList
  ACTION_DELETE_ITEM = ActionDeleteItem
  ACTION_DELETE_ITEM_LIST = ActionDeleteItemList
  ACTION_REJECT_ITEM = ActionRejectItem
  EXTRA_ITEM_NAME = ExtraItemName
  EXTRA_ITEM_NAMES = ExtraItemNames
  EXTRA_ITEM_QUERY = ExtraItemQuery
  EXTRA_LIST_NAME = ExtraListName
  EXTRA_LIST_QUERY = ExtraListQuery
com/google/android/gms/actions/NoteIntents = Android.Gms.Actions.NoteIntents
  ACTION_APPEND_NOTE = ActionAppendNote
  ACTION_CREATE_NOTE = ActionCreateNote
  ACTION_DELETE_NOTE = ActionDeleteNote
  EXTRA_NAME = ExtraName
  EXTRA_NOTE_QUERY = ExtraNoteQuery
  EXTRA_TEXT = ExtraText
com/google/android/gms/actions/ReserveIntents = Android.Gms.Actions.ReserveIntents
  ACTION_RESERVE_TAXI_RESERVATION = ActionReserveTaxiReservation
com/google/android/gms/actions/SearchIntents = Android.Gms.Actions.SearchIntents
  ACTION_SEARCH = ActionSearch
  EXTRA_QUERY = ExtraQuery
com/google/android/gms/ads/identifier/AdvertisingIdClient = Android.Gms.Ads.Identifier.AdvertisingIdClient
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;J)V = .ctor(Android.Content.Context, long)
  finish()V = Finish()
  getAdvertisingIdInfo(Landroid/content/Context;)Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info; = GetAdvertisingIdInfo(Android.Content.Context)
  getInfo()Lcom/google/android/gms/ads/identifier/AdvertisingIdClient$Info; = GetInfo()
  setShouldSkipGmsCoreVersionCheck(Z)V = SetShouldSkipGmsCoreVersionCheck(bool)
  start()V = Start()
com/google/android/gms/common/AccountPicker = Android.Gms.Common.AccountPicker
  newChooseAccountIntent(Landroid/accounts/Account;Ljava/util/ArrayList;[Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/content/Intent; = NewChooseAccountIntent(Android.Accounts.Account, System.Collections.Generic.IList<Android.Accounts.Account>, string[], bool, string, string, string[], Android.OS.Bundle)
com/google/android/gms/common/annotation/KeepName = Android.Gms.Common.Annotations.IKeepName
com/google/android/gms/common/api/CommonStatusCodes = Android.Gms.Common.Apis.CommonStatusCodes
  <init>()V = .ctor()
  API_NOT_CONNECTED = ApiNotConnected
  CANCELED = Canceled
  DEAD_CLIENT = DeadClient
  DEVELOPER_ERROR = DeveloperError
  ERROR = Error
  INTERNAL_ERROR = InternalError
  INTERRUPTED = Interrupted
  INVALID_ACCOUNT = InvalidAccount
  NETWORK_ERROR = NetworkError
  RESOLUTION_REQUIRED = ResolutionRequired
  SERVICE_DISABLED = ServiceDisabled
  SERVICE_VERSION_UPDATE_REQUIRED = ServiceVersionUpdateRequired
  SIGN_IN_REQUIRED = SignInRequired
  SUCCESS = Success
  SUCCESS_CACHE = SuccessCache
  TIMEOUT = Timeout
  getStatusCodeString(I)Ljava/lang/String; = GetStatusCodeString(int)
com/google/android/gms/common/api/Releasable = Android.Gms.Common.Apis.IReleasable
  release()V = Release()
com/google/android/gms/common/api/ResolvingResultCallbacks = Android.Gms.Common.Apis.ResolvingResultCallbacks
  <init>(Landroid/app/Activity;I)V = .ctor(Android.App.Activity, int)
  onFailure(Lcom/google/android/gms/common/api/Status;)V = OnFailure(Android.Gms.Common.Apis.Statuses)
  onUnresolvableFailure(Lcom/google/android/gms/common/api/Status;)V = OnUnresolvableFailure(Android.Gms.Common.Apis.Statuses)
com/google/android/gms/common/api/Result = Android.Gms.Common.Apis.IResult
  getStatus()Lcom/google/android/gms/common/api/Status; = Status
com/google/android/gms/common/api/ResultCallback = Android.Gms.Common.Apis.IResultCallback
  onResult(Lcom/google/android/gms/common/api/Result;)V = OnResult(Java.Lang.Object)
com/google/android/gms/common/api/ResultCallbacks = Android.Gms.Common.Apis.ResultCallbacks
  <init>()V = .ctor()
  onFailure(Lcom/google/android/gms/common/api/Status;)V = OnFailure(Android.Gms.Common.Apis.Statuses)
  onResult(Lcom/google/android/gms/common/api/Result;)V = OnResult(Java.Lang.Object)
  onSuccess(Lcom/google/android/gms/common/api/Result;)V = OnSuccess(Java.Lang.Object)
com/google/android/gms/common/api/Scope = Android.Gms.Common.Apis.Scope
  <init>(Ljava/lang/String;)V = .ctor(string)
  CREATOR = Creator
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/api/Status = Android.Gms.Common.Apis.Statuses
  <init>(I)V = .ctor(int)
  <init>(ILjava/lang/String;)V = .ctor(int, string)
  <init>(ILjava/lang/String;Landroid/app/PendingIntent;)V = .ctor(int, string, Android.App.PendingIntent)
  CREATOR = Creator
  sq = Sq
  sr = Sr
  ss = Ss
  st = St
  su = Su
  sv = Sv
  sw = Sw
  hasResolution()Z = HasResolution
  isCanceled()Z = IsCanceled
  isInterrupted()Z = IsInterrupted
  isSuccess()Z = IsSuccess
  getResolution()Landroid/app/PendingIntent; = Resolution
  getStatus()Lcom/google/android/gms/common/api/Status; = Status
  getStatusCode()I = StatusCode
  getStatusMessage()Ljava/lang/String; = StatusMessage
  startResolutionForResult(Landroid/app/Activity;I)V = StartResolutionForResult(Android.App.Activity, int)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/ConnectionResult = Android.Gms.Common.ConnectionResult
  <init>(I)V = .ctor(int)
  <init>(ILandroid/app/PendingIntent;)V = .ctor(int, Android.App.PendingIntent)
  <init>(ILandroid/app/PendingIntent;Ljava/lang/String;)V = .ctor(int, Android.App.PendingIntent, string)
  API_UNAVAILABLE = ApiUnavailable
  CANCELED = Canceled
  CREATOR = Creator
  DEVELOPER_ERROR = DeveloperError
  DRIVE_EXTERNAL_STORAGE_REQUIRED = DriveExternalStorageRequired
  INTERNAL_ERROR = InternalError
  INTERRUPTED = Interrupted
  INVALID_ACCOUNT = InvalidAccount
  LICENSE_CHECK_FAILED = LicenseCheckFailed
  NETWORK_ERROR = NetworkError
  rb = Rb
  RESOLUTION_REQUIRED = ResolutionRequired
  RESTRICTED_PROFILE = RestrictedProfile
  SERVICE_DISABLED = ServiceDisabled
  SERVICE_INVALID = ServiceInvalid
  SERVICE_MISSING = ServiceMissing
  SERVICE_MISSING_PERMISSION = ServiceMissingPermission
  SERVICE_UPDATING = ServiceUpdating
  SERVICE_VERSION_UPDATE_REQUIRED = ServiceVersionUpdateRequired
  SIGN_IN_FAILED = SignInFailed
  SIGN_IN_REQUIRED = SignInRequired
  SUCCESS = Success
  TIMEOUT = Timeout
  getErrorCode()I = ErrorCode
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  hasResolution()Z = HasResolution
  isSuccess()Z = IsSuccess
  getResolution()Landroid/app/PendingIntent; = Resolution
  startResolutionForResult(Landroid/app/Activity;I)V = StartResolutionForResult(Android.App.Activity, int)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/GooglePlayServicesNotAvailableException = Android.Gms.Common.GooglePlayServicesNotAvailableException
  <init>(I)V = .ctor(int)
  errorCode = ErrorCode
com/google/android/gms/common/GooglePlayServicesRepairableException = Android.Gms.Common.GooglePlayServicesRepairableException
  getConnectionStatusCode()I = ConnectionStatusCode
com/google/android/gms/common/internal/DowngradeableSafeParcel = Android.Gms.Common.Internal.DowngradeableSafeParcel
  <init>()V = .ctor()
com/google/android/gms/common/internal/ReflectedParcelable = Android.Gms.Common.Internal.IReflectedParcelable
com/google/android/gms/common/internal/safeparcel/AbstractSafeParcelable = Android.Gms.Common.Internal.SafeParcel.AbstractSafeParcelable
  <init>()V = .ctor()
  describeContents()I = DescribeContents()
com/google/android/gms/common/internal/safeparcel/SafeParcelable = Android.Gms.Common.Internal.SafeParcel.ISafeParcelable
  NULL = Null
com/google/android/gms/common/internal/safeparcel/zzc = Android.Gms.Common.Internal.SafeParcel.Zzc
com/google/android/gms/common/Scopes = Android.Gms.Common.Scopes
  APP_STATE = AppState
  CLOUD_SAVE = CloudSave
  DRIVE_APPFOLDER = DriveAppfolder
  DRIVE_FILE = DriveFile
  EMAIL = Email
  FITNESS_ACTIVITY_READ = FitnessActivityRead
  FITNESS_ACTIVITY_READ_WRITE = FitnessActivityReadWrite
  FITNESS_BODY_READ = FitnessBodyRead
  FITNESS_BODY_READ_WRITE = FitnessBodyReadWrite
  FITNESS_LOCATION_READ = FitnessLocationRead
  FITNESS_LOCATION_READ_WRITE = FitnessLocationReadWrite
  FITNESS_NUTRITION_READ = FitnessNutritionRead
  FITNESS_NUTRITION_READ_WRITE = FitnessNutritionReadWrite
  GAMES = Games
  PLUS_LOGIN = PlusLogin
  PLUS_ME = PlusMe
  PLUS_MOMENTS = PlusMoments
  PROFILE = Profile
com/google/android/gms/common/server/converter/ConverterWrapper = Android.Gms.Common.Server.Converter.ConverterWrapper
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/server/FavaDiagnosticsEntity = Android.Gms.Common.Server.FavaDiagnosticsEntity
  <init>(ILjava/lang/String;I)V = .ctor(int, string, int)
  zx = Zx
  zy = Zy
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/server/response/FastJsonResponse = Android.Gms.Common.Server.Response.FastJsonResponse
  <init>()V = .ctor()
com/google/android/gms/common/server/response/FastSafeParcelableJsonResponse = Android.Gms.Common.Server.Response.FastSafeParcelableJsonResponse
  <init>()V = .ctor()
  describeContents()I = DescribeContents()
com/google/android/gms/common/server/response/FieldMappingDictionary = Android.Gms.Common.Server.Response.FieldMappingDictionary
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/server/response/SafeParcelResponse = Android.Gms.Common.Server.Response.SafeParcelResponse
  getVersionCode()I = VersionCode
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/stats/ConnectionEvent = Android.Gms.Common.Stats.ConnectionEvent
  <init>(JILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JJ)V = .ctor(long, int, string, string, string, string, string, string, long, long)
  CREATOR = Creator
  getEventType()I = EventType
  getTimeMillis()J = TimeMillis
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/stats/StatsEvent = Android.Gms.Common.Stats.StatsEvent
  <init>()V = .ctor()
  getEventType()I = EventType
  getTimeMillis()J = TimeMillis
com/google/android/gms/common/stats/WakeLockEvent = Android.Gms.Common.Stats.WakeLockEvent
  <init>(JILjava/lang/String;ILjava/util/List;Ljava/lang/String;JILjava/lang/String;Ljava/lang/String;FJLjava/lang/String;)V = .ctor(long, int, string, int, System.Collections.Generic.IList<string>, string, long, int, string, string, float, long, string)
  CREATOR = Creator
  getEventType()I = EventType
  getTimeMillis()J = TimeMillis
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/common/stats/zzc = Android.Gms.Common.Stats.Zzc
com/google/android/gms/common/stats/zzd = Android.Gms.Common.Stats.Zzd
  AA = Aa
  AB = Ab
  AC = Ac
  AD = Ad
  AE = Ae
  AF = Af
  AG = Ag
  Az = Az
  LOG_LEVEL_OFF = LogLevelOff
com/google/android/gms/common/stats/zze = Android.Gms.Common.Stats.Zze
  <init>()V = .ctor()
  <init>(IJ)V = .ctor(int, long)
com/google/android/gms/common/stats/zzf = Android.Gms.Common.Stats.Zzf
com/google/android/gms/common/UserRecoverableException = Android.Gms.Common.UserRecoverableException
  <init>(Ljava/lang/String;Landroid/content/Intent;)V = .ctor(string, Android.Content.Intent)
  getIntent()Landroid/content/Intent; = Intent
com/google/android/gms/common/util/DynamiteApi = Android.Gms.Common.Util.IDynamiteApi
com/google/android/gms/common/util/zzc = Android.Gms.Common.Util.Zzc
com/google/android/gms/common/util/zzd = Android.Gms.Common.Util.Zzd
com/google/android/gms/common/zzc = Android.Gms.Common.Zzc
  GOOGLE_PLAY_SERVICES_PACKAGE = GooglePlayServicesPackage
  GOOGLE_PLAY_SERVICES_VERSION_CODE = GooglePlayServicesVersionCode
  getErrorResolutionPendingIntent(Landroid/content/Context;II)Landroid/app/PendingIntent; = GetErrorResolutionPendingIntent(Android.Content.Context, int, int)
  getErrorString(I)Ljava/lang/String; = GetErrorString(int)
  getOpenSourceSoftwareLicenseInfo(Landroid/content/Context;)Ljava/lang/String; = GetOpenSourceSoftwareLicenseInfo(Android.Content.Context)
  isGooglePlayServicesAvailable(Landroid/content/Context;)I = IsGooglePlayServicesAvailable(Android.Content.Context)
  isUserResolvableError(I)Z = IsUserResolvableError(int)
com/google/android/gms/common/zze = Android.Gms.Common.Zze
  GOOGLE_PLAY_SERVICES_PACKAGE = GooglePlayServicesPackage
  GOOGLE_PLAY_SERVICES_VERSION_CODE = GooglePlayServicesVersionCode
  GOOGLE_PLAY_STORE_PACKAGE = GooglePlayStorePackage
  rp = Rp
  rq = Rq
  getErrorPendingIntent(ILandroid/content/Context;I)Landroid/app/PendingIntent; = GetErrorPendingIntent(int, Android.Content.Context, int)
  getErrorString(I)Ljava/lang/String; = GetErrorString(int)
  getOpenSourceSoftwareLicenseInfo(Landroid/content/Context;)Ljava/lang/String; = GetOpenSourceSoftwareLicenseInfo(Android.Content.Context)
  getRemoteContext(Landroid/content/Context;)Landroid/content/Context; = GetRemoteContext(Android.Content.Context)
  getRemoteResource(Landroid/content/Context;)Landroid/content/res/Resources; = GetRemoteResource(Android.Content.Context)
  isGooglePlayServicesAvailable(Landroid/content/Context;)I = IsGooglePlayServicesAvailable(Android.Content.Context)
  isUserRecoverableError(I)Z = IsUserRecoverableError(int)
com/google/android/gms/common/zzf = Android.Gms.Common.Zzf
com/google/android/gms/dynamic/LifecycleDelegate = Android.Gms.Dynamic.ILifecycleDelegate
  onCreate(Landroid/os/Bundle;)V = OnCreate(Android.OS.Bundle)
  onCreateView(Landroid/view/LayoutInflater;Landroid/view/ViewGroup;Landroid/os/Bundle;)Landroid/view/View; = OnCreateView(Android.Views.LayoutInflater, Android.Views.ViewGroup, Android.OS.Bundle)
  onDestroy()V = OnDestroy()
  onDestroyView()V = OnDestroyView()
  onInflate(Landroid/app/Activity;Landroid/os/Bundle;Landroid/os/Bundle;)V = OnInflate(Android.App.Activity, Android.OS.Bundle, Android.OS.Bundle)
  onLowMemory()V = OnLowMemory()
  onPause()V = OnPause()
  onResume()V = OnResume()
  onSaveInstanceState(Landroid/os/Bundle;)V = OnSaveInstanceState(Android.OS.Bundle)
  onStart()V = OnStart()
  onStop()V = OnStop()
com/google/android/gms/dynamite/descriptors/com/google/android/gms/flags/ModuleDescriptor = Android.Gms.Dynamite.Descriptors.Flags.ModuleDescriptor
  <init>()V = .ctor()
  MODULE_ID = ModuleId
  MODULE_VERSION = ModuleVersion
com/google/android/gms/iid/MessengerCompat = Android.Gms.Iid.MessengerCompat
  <init>(Landroid/os/Handler;)V = .ctor(Android.OS.Handler)
  <init>(Landroid/os/IBinder;)V = .ctor(Android.OS.IBinder)
  CREATOR = Creator
  getBinder()Landroid/os/IBinder; = Binder
  describeContents()I = DescribeContents()
  send(Landroid/os/Message;)V = Send(Android.OS.Message)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/location/places/PlaceReport = Android.Gms.Location.Places.PlaceReport
  CREATOR = Creator
  getPlaceId()Ljava/lang/String; = PlaceId
  getSource()Ljava/lang/String; = Source
  getTag()Ljava/lang/String; = Tag
  create(Ljava/lang/String;Ljava/lang/String;)Lcom/google/android/gms/location/places/PlaceReport; = Create(string, string)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/google/android/gms/security/ProviderInstaller = Android.Gms.Security.ProviderInstaller
  <init>()V = .ctor()
  PROVIDER_NAME = ProviderName
  installIfNeeded(Landroid/content/Context;)V = InstallIfNeeded(Android.Content.Context)
  installIfNeededAsync(Landroid/content/Context;Lcom/google/android/gms/security/ProviderInstaller$ProviderInstallListener;)V = InstallIfNeededAsync(Android.Content.Context, Android.Gms.Security.ProviderInstaller.IProviderInstallListener)
com/google/firebase/FirebaseApiNotAvailableException = Firebase.FirebaseApiNotAvailableException
  <init>(Ljava/lang/String;)V = .ctor(string)
com/google/firebase/FirebaseException = Firebase.FirebaseException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
